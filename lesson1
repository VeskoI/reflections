Q: How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
A: I can always get back and review previous changes, thus easier spotting errors I've made.

Q: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
A: Pros is that you can make logical commits. Con is that you're not "obliged" to do so, so you can either forget and commit hude portion, or you can commit too often, or even forget to commit at all.

Q: Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
A: Because Git is a source-control system for programming code (which often requires changing lots of files at the same time), and the others listed are source-control systems NOT targeting programmin.

Q: How can you use the commands git log and git diff to view the history of files?
A: Gives me an easy way to see previous version of the files, including what specifically has changed and when.

Q: How might using version control make you more confident to make changes that could break something?
A: I can always go back and review previous versions, so introducing a bug isn't a problem.

Q: Now that you have your workspace set up, what do you want to try using Git for?
A: My Android programming projects

